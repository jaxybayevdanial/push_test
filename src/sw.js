// Service Worker –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const CACHE_NAME = 'pwa-push-v1';

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Service Worker
self.addEventListener('install', (event) => {
  console.log('Service Worker: –£—Å—Ç–∞–Ω–æ–≤–∫–∞');
  self.skipWaiting();
});

// –ê–∫—Ç–∏–≤–∞—Ü–∏—è Service Worker
self.addEventListener('activate', (event) => {
  console.log('Service Worker: –ê–∫—Ç–∏–≤–∞—Ü–∏—è');
  event.waitUntil(self.clients.claim());
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
self.addEventListener('message', (event) => {
  if (event.data && event.data.type === 'SCHEDULE_NOTIFICATION') {
    const delay = event.data.delay || 5000;
    
    console.log(`–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ ${delay}ms`);
    
    // –ü–ª–∞–Ω–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    setTimeout(() => {
      self.registration.showNotification('üîî –û—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', {
        body: '–ü—Ä–æ—à–ª–æ 5 —Å–µ–∫—É–Ω–¥ —Å –º–æ–º–µ–Ω—Ç–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏',
        icon: '/icon-192.png',
        badge: '/icon-192.png',
        vibrate: [200, 100, 200],
        tag: 'delayed-notification',
        requireInteraction: false,
        data: {
          dateOfArrival: Date.now(),
          primaryKey: 1
        }
      });
    }, delay);
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—é
self.addEventListener('notificationclick', (event) => {
  console.log('–ö–ª–∏–∫ –ø–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—é');
  event.notification.close();

  // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–ª–∏ —Ñ–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º –æ–∫–Ω–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  event.waitUntil(
    clients.matchAll({ type: 'window', includeUncontrolled: true })
      .then((clientList) => {
        // –ï—Å–ª–∏ –µ—Å—Ç—å –æ—Ç–∫—Ä—ã—Ç–æ–µ –æ–∫–Ω–æ, —Ñ–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –Ω–µ–º
        for (let client of clientList) {
          if ('focus' in client) {
            return client.focus();
          }
        }
        // –ï—Å–ª–∏ –Ω–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –æ–∫–æ–Ω, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤–æ–µ
        if (clients.openWindow) {
          return clients.openWindow('/');
        }
      })
  );
});

// Fetch event (–¥–ª—è PWA —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ fetch)
self.addEventListener('fetch', (event) => {
  // –ü—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è: –≤—Å–µ–≥–¥–∞ –∏–¥–µ–º –≤ —Å–µ—Ç—å
  event.respondWith(fetch(event.request));
});
